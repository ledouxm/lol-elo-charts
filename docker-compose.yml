version: "3.4"
services:
    server:
        image: lol-elo-charts
        build: .
        ports:
            - "8080"
        environment:
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
            POSTGRES_HOST: ${POSTGRES_HOST}
            POSTGRES_USER: ${POSTGRES_USER}
            RG_API_KEY: ${RG_API_KEY}
            BOT_TOKEN: ${BOT_TOKEN}
            CRON_RANK_DELAY_MIN: ${CRON_RANK_DELAY_MIN}
            CRON_BETS_DELAY_MIN: ${CRON_BETS_DELAY_MIN}
            CRON_ACTIVE_GAME_DELAY_MIN: ${CRON_ACTIVE_GAME_DELAY_MIN}
            ENABLE_BETS: ${ENABLE_BETS}
            FORCE_RECAPS: ${FORCE_RECAPS}
            HTTP_PORT: ${HTTP_PORT}
        restart: always
        depends_on:
            - postgresql
        networks:
            - lol-charts-network
        profiles:
            - production

    postgresql:
        image: postgres:12.5
        ports:
            - "${POSTGRES_PORT}:5432"
        environment:
            POSTGRES_DB: ${POSTGRES_DB}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_HOST_AUTH_METHOD: trust
            POSTGRES_MULTIPLE_DATABASES: test
        volumes:
            - postgresql:/var/lib/postgresql/data:delegated

        networks:
            - lol-charts-network

    adminer:
        image: adminer
        restart: always
        ports:
            - "8080"
        networks:
            - lol-charts-network

volumes:
    postgresql:

networks:
    lol-charts-network:
        driver: bridge
